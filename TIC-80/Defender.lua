-- title:  Defender
-- author: Balistic Ghoul Studios
-- desc:   Defend your wall!
-- script: lua
function reboot()
 x=13.5*8
	y=14.5*8
 mapx=0
 mapy=0

 p={
  x=13.5*8,
  y=14.5*8,
	 tothp=7,
	 curhp=7,
	 spr=256
 }
--======================================================--
--=================ENEMY TABLES=========================--
--======================================================--
	Soldier={
	-- x=math.random(0,29*8)
		y=0,
		spd=1,
		spr=10,
		hp=1,
		shotT=60,
		sprs=1
	}
	
	SpecialForces={
	-- x=math.random(0,29*8)
		y=0,
		spd=1,
		spr=9,
		hp=1,
		shotT=60,
		sprs=1
	}
	
	Tank={
	-- x=math.random(0,29*8)
		y=0,
		spd=0.5,
		spr=1,
		hp=3,
		shotT=120,
		sprs=2
	}
	
	HeavyTank={
	-- x=math.random(0,29*8)
		y=0,
		spd=1,
		spr=5,
		hp=3,
		shotT=60,
		sprs=2
	}
	
	Helicopter={
	-- x=math.random(0,29*8)
		y=0,
		spd=0.75,
		spr=97,
		hp=3,
		shotT=60,
		sprs=2
	}
	
	Truck={
	-- y=math.random(0,16*8),
		x=28,
		spd=0.75,
		spr=101,
		hp=3,
		shotT=0
	}
	
	Airship={
	-- x=math.random(0,29*8)
		y=0,
		spd=0.25,
		spr=259,
		hp=4,
		shotT=180,
		sprs=4
	}
	
end

function TIC()

	update_psystems()
	
	if btn(2) then 
	 p.x=p.x-1
	--	sfx(2)
	end
	if btn(3) then 
	 p.x=p.x+1 
	--	sfx(2)
	end

	cls(0)

	map(mapx,mapy)

	draw_psystems()

 if p.curhp > 0 then
 	if btnp(5) then
 		richexplo(p.x+8,p.y-50)
 	 --p.curhp = math.max(0, p.curhp - 1)
			--mapx=mapx+30
			if p.curhp == 0 then
			 richexplo(p.x,p.y)
				richexplo(x,y)
				richexplo(x+24,y)
				richexplo(x-24,y)
				richexplo(x+40,y)
				richexplo(x-40,y)
			end
  end
  p.spr=256+32*(4 - math.ceil((p.curhp / p.tothp)*4))
 	spr(p.spr,p.x,p.y,0,1,0,0,2,2)
	else
		print("GAME OVER",10*8,6*8,15,0,2,1)
		print("Press X",11*8,8*8,15,0,2,1)
		if btnp(5) then
			reboot()
		end
	end
end

--==================================================================================--
-- PARTICLE SYSTEM LIBRARY =========================================================--
--==================================================================================--

particle_systems = {}

-- Call this, to create an empty particle system, and then fill the emittimers, emitters,
-- drawfuncs, and affectors tables with your parameters.
function make_psystem(minlife, maxlife, minstartsize, maxstartsize, minendsize, maxendsize)
	local ps = {
	-- global particle system params

	-- if true, automatically deletes the particle system if all of it's particles died
	autoremove = true,

	minlife = minlife,
	maxlife = maxlife,

	minstartsize = minstartsize,
	maxstartsize = maxstartsize,
	minendsize = minendsize,
	maxendsize = maxendsize,

	-- container for the particles
	particles = {},

	-- emittimers dictate when a particle should start
	-- they called every frame, and call emit_particle when they see fit
	-- they should return false if no longer need to be updated
	emittimers = {},

	-- emitters must initialize p.x, p.y, p.vx, p.vy
	emitters = {},

	-- every ps needs a drawfunc
	drawfuncs = {},

	-- affectors affect the movement of the particles
	affectors = {},
	}

	table.insert(particle_systems, ps)

	return ps
end

-- Call this to update all particle systems
function update_psystems()
	local timenow = time()
	for key,ps in pairs(particle_systems) do
		update_ps(ps, timenow)
	end
end

-- updates individual particle systems
-- most of the time, you don't have to deal with this, the above function is sufficient
-- but you can call this if you want (for example fast forwarding a particle system before first draw)
function update_ps(ps, timenow)
	for key,et in pairs(ps.emittimers) do
		local keep = et.timerfunc(ps, et.params)
		if (keep==false) then
			table.remove(ps.emittimers, key)
		end
	end

	for key,p in pairs(ps.particles) do
		p.phase = (timenow-p.starttime)/(p.deathtime-p.starttime)

		for key,a in pairs(ps.affectors) do
			a.affectfunc(p, a.params)
		end

		p.x = p.x + p.vx
		p.y = p.y + p.vy

		local dead = false
		if (p.x<0 or p.x>240 or p.y<0 or p.y>136) then
			dead = true
		end

		if (timenow>=p.deathtime) then
			dead = true
		end

		if (dead==true) then
			table.remove(ps.particles, key)
		end
	end

	if (ps.autoremove==true and #ps.particles<=0) then
		local psidx = -1
		for pskey,pps in pairs(particle_systems) do
			if pps==ps then
				table.remove(particle_systems, pskey)
				return
			end
		end
	end
end

-- draw a single particle system
function draw_ps(ps, params)
	for key,df in pairs(ps.drawfuncs) do
		df.drawfunc(ps, df.params)
	end
end

-- draws all particle system
-- This is just a convinience function, you probably want to draw the individual particles,
-- if you want to control the draw order in relation to the other game objects for example
function draw_psystems()
	for key,ps in pairs(particle_systems) do
		draw_ps(ps)
	end
end

-- This need to be called from emitttimers, when they decide it is time to emit a particle
function emit_particle(psystem)
	local p = {}

	local ecount = nil
	local e = psystem.emitters[math.random(#psystem.emitters)]
	e.emitfunc(p, e.params)

	p.phase = 0
	p.starttime = time()
	p.deathtime = time()+frnd(psystem.maxlife-psystem.minlife)+psystem.minlife

	p.startsize = frnd(psystem.maxstartsize-psystem.minstartsize)+psystem.minstartsize
	p.endsize = frnd(psystem.maxendsize-psystem.minendsize)+psystem.minendsize

	table.insert(psystem.particles, p)
end

function frnd(max)
	return math.random()*max
end


--================================================================--
-- MODULES =======================================================--
--================================================================--

-- You only need to copy the modules you actually use to your program


-- EMIT TIMERS ==================================================--

-- Spawns a bunch of particles at the same time, then removes itself
-- params:
-- num - the number of particle to spawn
function emittimer_burst(ps, params)
	for i=1,params.num do
		emit_particle(ps)
	end
	return false
end

-- Emits a particle every "speed" time
-- params:
-- speed - time between particle emits
function emittimer_constant(ps, params)
	if (params.nextemittime<=time()) then
		emit_particle(ps)
		params.nextemittime = params.nextemittime + params.speed
	end
	return true
end

-- EMITTERS =====================================================--

-- Emits particles from a single point
-- params:
-- x,y - the coordinates of the point
-- minstartvx, minstartvy and maxstartvx, maxstartvy - the start velocity is randomly chosen between these values
function emitter_point(p, params)
	p.x = params.x
	p.y = params.y

	p.vx = frnd(params.maxstartvx-params.minstartvx)+params.minstartvx
	p.vy = frnd(params.maxstartvy-params.minstartvy)+params.minstartvy
end

-- Emits particles from the surface of a rectangle
-- params:
-- minx,miny and maxx, maxy - the corners of the rectangle
-- minstartvx, minstartvy and maxstartvx, maxstartvy - the start velocity is randomly chosen between these values
function emitter_box(p, params)
	p.x = frnd(params.maxx-params.minx)+params.minx
	p.y = frnd(params.maxy-params.miny)+params.miny

	p.vx = frnd(params.maxstartvx-params.minstartvx)+params.minstartvx
	p.vy = frnd(params.maxstartvy-params.minstartvy)+params.minstartvy
end

-- AFFECTORS ====================================================--

-- Constant force applied to the particle troughout it's life
-- Think gravity, or wind
-- params: 
-- fx and fy - the force vector
function affect_force(p, params)
	p.vx = p.vx + params.fx
	p.vy = p.vy + params.fy
end

-- A rectangular region, if a particle happens to be in it, apply a constant force to it
-- params: 
-- zoneminx, zoneminy and zonemaxx, zonemaxy - the corners of the rectangular area
-- fx and fy - the force vector
function affect_forcezone(p, params)
	if (p.x>=params.zoneminx and p.x<=params.zonemaxx and p.y>=params.zoneminy and p.y<=params.zonemaxy) then
		p.vx = p.vx + params.fx
		p.vy = p.vy + params.fy
	end
end

-- A rectangular region, if a particle happens to be in it, the particle stops
-- params: 
-- zoneminx, zoneminy and zonemaxx, zonemaxy - the corners of the rectangular area
function affect_stopzone(p, params)
	if (p.x>=params.zoneminx and p.x<=params.zonemaxx and p.y>=params.zoneminy and p.y<=params.zonemaxy) then
		p.vx = 0
		p.vy = 0
	end
end

-- A rectangular region, if a particle cames in contact with it, it bounces back
-- params: 
-- zoneminx, zoneminy and zonemaxx, zonemaxy - the corners of the rectangular area
-- damping - the velocity loss on contact
function affect_bouncezone(p, params)
	if (p.x>=params.zoneminx and p.x<=params.zonemaxx and p.y>=params.zoneminy and p.y<=params.zonemaxy) then
		p.vx = -p.vx*params.damping
		p.vy = -p.vy*params.damping
	end
end

-- A point in space which pulls (or pushes) particles in a specified radius around it
-- params:
-- x,y - the coordinates of the affector
-- radius - the size of the affector
-- strength - push/pull force - proportional with the particle distance to the affector coordinates
function affect_attract(p, params)
	if (math.abs(p.x-params.x)+math.abs(p.y-params.y)<params.mradius) then
		p.vx = p.vx + (p.x-params.x)*params.strength
		p.vy = p.vy + (p.y-params.y)*params.strength
	end
end

-- Moves particles around in a sin/cos wave or circulary. Directly modifies the particle position
-- params:
-- speed - the effect speed
-- xstrength, ystrength - the amplituse around the x and y axes
function affect_orbit(p, params)
	params.phase = params.phase + params.speed
	p.x = p.x + math.sin(params.phase)*params.xstrength
	p.y = p.y + math.cos(params.phase)*params.ystrength
end

-- DRAW FUNCS ===================================================--

-- Filled circle particle drawer, the particle animates it's size and color trough it's life
-- params:
-- colors array - indexes to the palette, the particle goes trough these in order trough it's lifetime
-- startsize and endsize is coming from the particle system parameters, not the draw func params!
function draw_ps_fillcirc(ps, params)
	for key,p in pairs(ps.particles) do
		c = math.floor(p.phase*#params.colors)+1
		r = (1-p.phase)*p.startsize+p.phase*p.endsize
		circ(p.x,p.y,r,params.colors[c])
	end
end

-- Single pixel particle, which animates trough the given colors
-- params:
-- colors array - indexes to the palette, the particle goes trough these in order trough it's lifetime
function draw_ps_pixel(ps, params)
	for key,p in pairs(ps.particles) do
		c = math.floor(p.phase*#params.colors)+1
		pix(p.x,p.y,params.colors[c])
	end
end

-- Draws a line between the particle's previous and current position, kind of "motion blur" effect
-- params:
-- colors array - indexes to the palette, the particle goes trough these in order trough it's lifetime
function draw_ps_streak(ps, params)
	for key,p in pairs(ps.particles) do
		c = math.floor(p.phase*#params.colors)+1
		line(p.x,p.y,p.x-p.vx,p.y-p.vy,params.colors[c])
	end
end

-- Animates trough the given frames with the given speed
-- params:
-- frames array - indexes to sprite tiles
function draw_ps_animspr(ps, params)
	params.currframe = params.currframe + params.speed
	if (params.currframe>#params.frames) then
		params.currframe = 1
	end
	for key,p in pairs(ps.particles) do
		-- pal(7,params.colors[math.floor(p.endsize)])
		spr(params.frames[math.floor(params.currframe+p.startsize)%#params.frames],p.x,p.y,0)
	end
	-- pal()
end

-- Maps the given frames to the life of the particle
-- params:
-- frames array - indexes to sprite tiles
function draw_ps_agespr(ps, params)
	for key,p in pairs(ps.particles) do
		local f = math.floor(p.phase*#params.frames)+1
		spr(params.frames[f],p.x,p.y,0)
	end
end

-- Each particle is randomly chosen from the given frames
-- params:
-- frames array - indexes to sprite tiles
function draw_ps_rndspr(ps, params)
	for key,p in pairs(ps.particles) do
		-- pal(7,params.colors[math.floor(p.endsize)])
		spr(params.frames[math.floor(p.startsize)],p.x,p.y,0)
	end
	-- pal()
end


--==================================================================================--
-- SAMPLES PARTICLE SYSTEMS ========================================================--
--==================================================================================--

function make_explosparks_ps(ex,ey)
	local ps = make_psystem(300,700, 1,2,0.5,0.5)
	
	table.insert(ps.emittimers,
		{
			timerfunc = emittimer_burst,
			params = { num = 10}
		}
	)
	table.insert(ps.emitters, 
		{
			emitfunc = emitter_point,
			params = { x = ex, y = ey, minstartvx = -1.5, maxstartvx = 1.5, minstartvy = -1.5, maxstartvy=1.5 }
		}
	)
	table.insert(ps.drawfuncs,
		{
			drawfunc = draw_ps_pixel,
			params = { colors = {15,13,4,15,4,13} }
		}
	)
	table.insert(ps.affectors,
		{ 
			affectfunc = affect_force,
			params = { fx = 0, fy = 0.1 }
		}
	)
end

function make_explosion_ps(ex,ey)
	local ps = make_psystem(100,500, 9,14,1,3)
	
	table.insert(ps.emittimers,
		{
			timerfunc = emittimer_burst,
			params = { num = 4 }
		}
	)
	table.insert(ps.emitters, 
		{
			emitfunc = emitter_box,
			params = { minx = ex-4, maxx = ex+4, miny = ey-4, maxy= ey+4, minstartvx = 0, maxstartvx = 0, minstartvy = 0, maxstartvy=0 }
		}
	)
	table.insert(ps.drawfuncs,
		{
			drawfunc = draw_ps_fillcirc,
			params = { colors = {15,13,4,6,6,2} }
		}
	)
end

function make_smoke_ps(ex,ey)
	local ps = make_psystem(200,2000, 1,3, 6,9)
	
	ps.autoremove = true

	table.insert(ps.emittimers,
		{
			timerfunc = emittimer_burst,
			params = { num = 20 }
		}
	)
	table.insert(ps.emitters, 
		{
			emitfunc = emitter_box,
			params = { minx = ex-4, maxx = ex+4, miny = ey, maxy= ey+2, minstartvx = 0, maxstartvx = 0, minstartvy = 0, maxstartvy=0 }
		}
	)
	table.insert(ps.drawfuncs,
		{
			drawfunc = draw_ps_fillcirc,
			params = { colors = {3,2,1} }
		}
	)
	table.insert(ps.affectors,
		{ 
			affectfunc = affect_force,
			params = { fx = 0.003, fy = -0.009 }
		}
	)
end

function make_explosmoke_ps(ex,ey)
	local ps = make_psystem(1500,2000, 5,8, 17,18)

	table.insert(ps.emittimers,
		{
			timerfunc = emittimer_burst,
			params = { num = 1 }
		}
	)
	table.insert(ps.emitters, 
		{
			emitfunc = emitter_point,
			params = { x = ex, y = ey, minstartvx = 0, maxstartvx = 0, minstartvy = 0, maxstartvy=0 }
		}
	)
	table.insert(ps.drawfuncs,
		{
			drawfunc = draw_ps_fillcirc,
			params = { colors = {2} }
		}
	)
	table.insert(ps.affectors,
		{ 
			affectfunc = affect_force,
			params = { fx = 0.003, fy = -0.01 }
		}
	)
end

--==================================================================================--
-- DEMOS ===========================================================================--
--==================================================================================--

function explo_demo()
	make_explosion_ps(frnd(220)+10,frnd(116)+10)
end

function richexplo(rx,ry)
--	make_explosmoke_ps(rx,ry)
 make_smoke_ps(rx,ry)
	make_explosparks_ps(rx,ry)
	make_explosion_ps(rx,ry)
	sfx(1)
end

function smoke_demo()
	make_smoke_ps(frnd(220)+10,frnd(90)+10)
end

function deleteallps()
	for key,ps in pairs(particle_systems) do
		particle_systems[key] = nil
	end
end

reboot()
-- <TILES>
-- 000:cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
-- 001:888800008118000082288888811888888228aaaa8118aaaa8228aaaa8118a888
-- 002:00008888000081188888822888888118aaaa8228aaaa8118aaaa8228888a8118
-- 003:888800008228000081188888822888888118aaaa8228aaaa8118aaaa8228a888
-- 004:00008888000082288888811888888228aaaa8118aaaa8228aaaa8118888a8228
-- 005:0666600006336000062266660633666606226333063363330666633300006666
-- 006:0006666000063360666622606666336033362260333633603336666066660000
-- 007:0666600006226000063366660622666606336333062263330666633300006666
-- 008:0006666000062260666633606666226033363360333622603336666066660000
-- 009:0006600000633600063333600633336003633630004664000020400000230000
-- 010:00088000008aa80008aaaa8008aaaa800a8aa8a0004884000020400000230000
-- 011:888800000818000082288008811888088228aa8a0818aaaa8228aaaa8118aa88
-- 012:00008880000082888088822888888180aaaa8228a8aa8118aa8a82808aaa8118
-- 013:0606600006636000062266060633666600626333063663330660633300000636
-- 014:0000000000066000006626000636336063362600333363603336666066660000
-- 016:cccccccccccccccc333333333233323323232323333233326363636336363636
-- 017:8228a8aa8118a8aa8228a8888118a9888228aa98811800088228000888880008
-- 018:aa8a8228aa8a8118888a8228889a811889aa8228800081188000822880008888
-- 019:8118a8aa8228a8aa8118a8888228a9888118aa98822800088118000888880008
-- 020:aa8a8118aa8a8228888a8118889a822889aa8118800082288000811880008888
-- 021:0666663306336633062266660633676606226367063360600666606000000060
-- 022:3366666033663360666622606676336076362260060633600606666006000000
-- 023:0666663306226633063366660622676606336367062260600666606000000060
-- 024:3366666033662260666633606676226076363360060622600606666006000000
-- 025:0000000006600660006006000030030000cccc00003773000076670000633600
-- 026:00000000033003300030030000a00a0000cccc0000a99a0000988900008aa800
-- 027:0828a8aa8118a8aa822aa8888118a9888228aa98088000080088000000000000
-- 028:a8aa8228aa8aa8188a8a8228889a811889aa8280800081188000082800000088
-- 029:0666663300636633062266660633676600626367063660600660600000000000
-- 030:3366660033363360666626006676336076362260060636600606606000000000
-- 032:ccccccccc666666c333333333233323323232323333233326363636336363636
-- 033:888800008118000082288088811888888228aaaa8118aaaa8228aaaa8118aa88
-- 034:00008888000081188888822888888118aaaa8228aaaa8118aaaa8228888a8118
-- 035:888800008228000081188088822888888118aaaa8228aaaa8118aaaa8228aa88
-- 036:00008888000082288888811888888228aaaa8118aaaa8228aaaa8118888a8228
-- 037:0606600006636000062266060633666606226333063363330666633300006666
-- 038:0006666000063360666622606666336033362260333333603336666066660000
-- 039:0606600006626000063366060622666606336333062263330666633300006666
-- 040:0006666000062260666633606666226033363360333322603336666066660000
-- 041:0633336006333360006336000306603024222204200300000000300000000000
-- 042:08aaaa8008aaaa80008aa8000a0880a024222204200300000000300000000000
-- 043:0002200000002200000022206000011666001111000111060010100000000006
-- 044:0001000000111000011100006112222011220200600000006000033060003213
-- 048:363636366363636333323332232323233233323333333333cccccccccccccccc
-- 049:8228a8aa8118a8aa8228a8888118a9888228aa98811800088228000008880008
-- 050:aa8a8228aa8a8118888a8228889a811889aa8228800081188000882880000088
-- 051:8118a8aa8228a8aa8118a8888228a9888118aa98822800088118000008880008
-- 052:aa8a8118aa8a8228888a8118889a822889aa8118800082288000881880000088
-- 053:0666663300636633062266660633676606226367063360600666606000000000
-- 054:3366666033363360666622606676336076362260060636600606606006000000
-- 055:0666663300626633063366660622676606336367062260600666606000000000
-- 056:3366666033362260666633606676226076363360060626600606606006000000
-- 059:000bb333000bb366021bb36301bb336333373363337673633337336603303333
-- 060:3333167266372761367671233637333076330300363000006600600030066000
-- 064:363636366363636333323332232323233233323333333333c666666ccccccccc
-- 065:888800008118000082288008811888088228aa8a0818aaaa8228aaaa8118aa88
-- 066:00008888000081188088822888888118aaaa8228aaaa8118aaaa8228888a8118
-- 067:888800008228000081188008822888088118aa8a0828aaaa8118aaaa8228aa88
-- 068:00008888000028288088811888888228aaaa8118aaaa8228aaaa8118888a8228
-- 069:0606600006636000062266060633666600626333063363330666633300000666
-- 070:0006666000063360666622606636336033362260333363603336666066660000
-- 071:0606600006626000063366060622666600636333062263330666633300000666
-- 072:0006666000062260666633606636226033363360333362603336666066660000
-- 080:cccccccccc5ccccccccccccccccccccccccccc5cccccccccc5cccccccccccccc
-- 081:8228a8aa8118a8aa8228a8888118a9888228aa98811800088228000008880008
-- 082:aa8a8228aa8a81188a8a8228889a811889aa8228800081188000882880000088
-- 083:8118a8aa8228a8aa8118a8888228a9888118aa98822800088118000008880008
-- 084:aa8a8118aa8a82288a8a8118889a822889aa8118800082288000881880000088
-- 085:0666663300636633062266660633676606226367063660600660606000000000
-- 086:3366660033363360666622606676336076362260060636600606606006000000
-- 087:0666663300626633063366660622676606336367062660600660606000000000
-- 088:3366660033362260666633606676226076363360060626600606606006000000
-- 096:cccccccccaccccacc8cac8accccac8cccac8cccccac8caccc8ccc8cccccccccc
-- 097:0000000600000066000000060000000300000222000022220002222200222222
-- 098:6000000066000000600000003000000022200000222100002212100021212200
-- 099:0000000600000066000000060000000300000222000012220001212200221212
-- 100:6000000066000000600000003000000022200000222200002222200022222200
-- 101:00000000006660000062a444006355550062444400665555000044440000a8aa
-- 102:0000000000066600444a260055553600444426005555660044440000aa8a0000
-- 103:00000000006660000063a444006255550063444400665555000044440000a8aa
-- 104:0000000000066600444a360055552600444436005555660044440000aa8a0000
-- 112:ccccccccccccccccccc33333cc322322c3233333cccccccccccccccccccccccc
-- 113:0022222200222226002222160022212100221212000121220000122200000222
-- 114:1212220061222200622222002222220022222200222220002222000022200000
-- 115:0022212100222216002222260022222200222222000222220000222200000222
-- 116:2222220062222200612222001212220021212200221210002221000022200000
-- 117:0000a8aa0066a8880062abbb0063a9990062a323006660000000000000000000
-- 118:aa8a0000888a6600bbba2600999a3600323a2600000666000000000000000000
-- 119:0000a8aa0066a8880063abbb0062a9990063a323006660000000000000000000
-- 120:aa8a0000888a6600bbba3600999a2600323a3600000666000000000000000000
-- 128:cccccccccccccccc333333332322232233333333cccccccccccccccccccccccc
-- 129:0000000600000006000000060000000300000222000022220002222200222222
-- 130:6000000066000000600000003000000022200000222100002212100021212200
-- 131:0000000600000006000000060000000300000222000012220001212200222212
-- 132:6000000066000000600000003000000022200000222200002222200022222200
-- 133:00000000006660000062a444006355550062644400665555000044440000a8aa
-- 134:0000000000066600444a260055553600444426005555660044440000aa8a0000
-- 135:00000000006660000063a444006255550063644400665555000044440000a8aa
-- 136:0000000000066600444a360055552600444436005555660044440000aa8a0000
-- 144:cccccccccccccccc33333ccc223223cc3333323ccccccccccccccccccccccccc
-- 145:0022222200222220002222160022212100221212000122220000122200000222
-- 146:1212220061222200022222002222220022222200222220002222000022200000
-- 147:0022212100222216002222200022222200222222000222220000222200000222
-- 148:2222220002222200612222001212220021212200221210002221000022200000
-- 149:0000a8aa0066a8880062abbb0063a9990062a323006660000000000000000000
-- 150:aaa00000888a6600bbba2600999a3600323a2600000660000000000000000000
-- 151:0000a8aa0066a8880063abbb0062a9990063a323006660000000000000000000
-- 152:aaa00000888a6600bbba3600999a2600323a3600000660000000000000000000
-- 160:ccccccccccccccccccccccccc3cccccc323c2c3ccccccccccccccccccccccccc
-- 161:0000000600000006000000060000000300000222000022220002022200222022
-- 162:6000000066000000600000003000000022200000222100002212100022212200
-- 163:0000000600000006000000060000000300000222000012220001212200222212
-- 164:6000000066000000600000003000000022200000222200002220200022022200
-- 165:00000000006660000062a444006355550062644400665555000044440000a8aa
-- 166:0000000040066600044a260055553600444426005555660044440000aa8a0000
-- 167:00000000006660000063a444006255550063644400665555000044440000a8aa
-- 168:0000000040066600044a360055552600444436005555660044440000aa8a0000
-- 176:cccccccccccccccccccccccccccccc3cc3c2c323cccccccccccccccccccccccc
-- 177:0022222200222226002222160022212100221212000122220000122200000222
-- 178:1212220061222200022222002022220022222200222020002222000022200000
-- 179:0022212100222216002222200022220200222222000202220000222200000222
-- 180:2222220002222200612222001212220021222200221210002221000022200000
-- 181:0000a8aa0066a8880062abeb0603a9990062a323006660000000000000000000
-- 182:aaa00000888a6600bbba2600999a3600323a2600000660000000000000000000
-- 183:0000a8aa0066a8880063abeb0602a9990063a323006660000000000000000000
-- 184:aaa00000888a6600bbba3600999a2600323a3600000660000000000000000000
-- 192:cccccccccccccccc33c3333c3233323323232323333233326363636336363636
-- 193:ccccccccc66c6c6c33333c333233323323232323333233326363636336363636
-- 194:ccccccccccccccccccccccccccc33ccc2cc3cc2c3c323c32636363c336363636
-- 195:cccccccccc6c6ccccc3ccc3cc2c33c332c2323c3333cc33c6363c36336363636
-- 196:363636366363636333323332232323233233323333c3333ccccccccccccccccc
-- 197:363636366363636333323332232323233233323333333c33c66c6c6ccccccccc
-- 198:36363636636363c33c323c322cc3cc2cccc33ccccccccccccccccccccccccccc
-- 199:363636366363c363333cc33c2c2323c3c2c33c33cc3ccc3ccc6c6ccccccccccc
-- 200:ccccccccccccccccccccccccccccccccccccccccccccccccc2cc2ccc213c32c3
-- 201:cccccccccccccccccccccccccccccccccccccccccccccccccccccc3cc3c2c323
-- 208:cccccccccccccccc3cc3c3cc32c3323c23232323333233326363636336363636
-- 209:cccccccccc6c6c6cc3333c3c3233323323232323333233326363636336363636
-- 210:ccccccccccccccccccccccccccc3cccc2cc3cc2c3c3c3c326c6c63c3c6c63c36
-- 211:cccccccccccccccccc3ccc3cc2c3ccc32c2c23c3c3ccc33c6c63cc63363636c6
-- 212:3636363663636363333233322323232332c3323c3cc3c3cccccccccccccccccc
-- 213:3636363663636363333233322323232332333233c3333c3ccc6c6c6ccccccccc
-- 214:c6c63c366c6c63c33c3c3c322cc3cc2cccc3cccccccccccccccccccccccccccc
-- 215:363636c66c63cc63c3ccc33c2c2c23c3c2c3ccc3cc3ccc3ccccccccccccccccc
-- 216:3c23c312ccc2cc2ccccccccccccccccccccccccccccccccccccccccccccccccc
-- 217:c3c2c323cccccc3ccccccccccccccccccccccccccccccccccccccccccccccccc
-- 224:ccccccccccccccccccc3cccc3cc332cc2c232c2c3c3233326363636336363636
-- 225:cccccccccc6c6cccc33c3c3c32c33c33232323c3333233326363636336363636
-- 226:ccccccccccccccccccccccccccccccccccc3cccc3ccc3c3c6c6c6cc3c6c63c36
-- 227:ccccccccccccccccccccccccccc3cccc2c2cc3c3c3cccc3c6c63cc63cc3c36c6
-- 228:36363636636363633c3233322c232c2c3cc332ccccc3cccccccccccccccccccc
-- 229:363636366363636333323332232323c332c33c33c33c3c3ccc6c6ccccccccccc
-- 230:c6c63c366c6c6cc33ccc3c3cccc3cccccccccccccccccccccccccccccccccccc
-- 231:cc3c36c66c63cc63c3cccc3c2c2cc3c3ccc3cccccccccccccccccccccccccccc
-- 232:323c2c3cc3cccccccccccccccccccccccccccccccccccccccccccccccccccccc
-- 233:ccccccccccccccccccccccccccccccccccccccccccccccccc3cccccc323c2c3c
-- 240:0000000000000000001111110010000000100000001111110000000000000000
-- 241:0000000000000000111111110000000000000000111111110000000000000000
-- 242:0000000000000000111111000000010000000100111111000000000000000000
-- </TILES>

-- <SPRITES>
-- 000:0000770000007700000066000000660000006600000066000000666600006666
-- 001:0077000000770000006600000066000000660000006600006666000066660000
-- 002:0000000000000000000000000004400000044000000000000000000000000000
-- 003:0000000000000000000000000000000000000000000000070000000700000007
-- 004:00060f060006f4f6006333360777777777777733777733377773377b77337bbb
-- 005:60f060006f4f600063333600777777703377777773337777b7733777bbb73377
-- 006:0000000000000000000000000000000000000000700000007000000070000000
-- 007:0000000000000000000000000000000000000000000000070000000700000007
-- 008:000604060006fff6006333360777777777777733777733377773377b77337bbb
-- 009:604060006fff600063333600777777703377777773337777b7733777bbb73377
-- 010:0000000000000000000000000000000000000000700000007000000070000000
-- 011:0000000000033300003333000333320003332000000000000000000000000007
-- 012:0006000000060006006333360777777777777733777733370073377b0033721b
-- 013:600000006000600763333607777777003377770073337700b7733770b1273370
-- 014:0000000077000000770000000000000000770000077770000770770000000000
-- 016:0066666600666666006633330066333300663333006633330066666600666666
-- 017:6666660066666600333366003333660033336600333366006666660066666600
-- 019:0000033700033337033333373666666736333367363333673666666703666637
-- 020:7737eeee7737bbbb7737bbbb7737eeee7737bbbb77377eee77337bbb7733777b
-- 021:eeee7377bbbb7377bbbb7377eeee7377bbbb7377eee77377bbb73377b7773377
-- 022:7330000073333000733333307666666376333363763333637666666373666630
-- 023:0000033700033337033333373666666736333367363333673666666703666637
-- 024:7737eeee7737bbbb7737bbbb7737eeee7737bbbb77377eee77337bbb7733777b
-- 025:eeee7377bbbb7377bbbb7377eeee7377bbbb7377eee77377bbb73377b7773377
-- 026:7330000073333000733333307666666376333363763333637666666373666630
-- 027:0000003700033337033333330666366736333367363333673666666703666637
-- 028:773731ee773721bb77371bb17737ee13773777b17737e77e7733bb7b77337bb7
-- 029:ee137000bbb17000bbbb73701ee17377bb127377e13773771227337717773377
-- 030:0000000030000000333000003333000030000000333000003300000033333000
-- 032:0000770000007700000066000000060000006600000066000000666600006666
-- 033:0077000000770000006600000066000000660000006600006660000066660000
-- 035:0363363700633637007337370003333700000337000000070000000700000007
-- 036:7733377777333337773333337736666677366666773663337736633377366666
-- 037:7773337773333377333333776666637766666377333663773336637766666377
-- 038:7363363073633600737337007333300073300000700000007000000070000000
-- 039:0363363700633637007337370003333700000337000000070000000700000007
-- 040:7733377777333337773333337736666677366666773663337736633377366666
-- 041:7773337773333377333333776666637766666377333663773336637766666377
-- 042:7363363073633600737337007333300073300000700000007000000070000000
-- 043:0363363700633637007337370000333700000333000000070000000700000000
-- 044:7733377777333337773333337336663677366666773663337736633377366666
-- 045:7773337773333377333333776666637766666377333663773336637066666370
-- 046:3333330033333000330000003300000030000000000000000000000000000000
-- 048:0066666600666636000633330066333300663333006633330066666600660666
-- 049:6666660066666600333366003333660033333600333366006666600066666600
-- 051:0000000700000007000000000000000000000000000000000000000000000000
-- 052:7736666677733663077736630777766700077667000776670000066000000660
-- 053:6666637736633777366377707667777076677000766770000660000006600000
-- 054:7000000070000000000000000000000000000000000000000000000000000000
-- 055:0000000700000007000000000000000000000000000000000000000000000000
-- 056:7736666677733663077736630777766700077667000776670000066000000660
-- 057:6666637736633777366377707667777076677000766770000660000006600000
-- 058:7000000070000000000000000000000000000000000000000000000000000000
-- 059:0000000000000007077000000777700000777000000777000007770000000000
-- 060:7736666677733663077736630077766700077667000776670000066000000060
-- 061:6666337736633777366377707667777077000000700000000066600000666600
-- 062:7000000000000000000000000000000000000000006600000006600000006000
-- 064:0000770000007700000066000000060000006600000066000000066600006666
-- 065:0077000000770000006600000060000000600000006600006660000066660000
-- 067:0000000000000000000000000000000000000000000000070000000000000007
-- 068:00060f060006f4f6006333360777777777777733777733377773377b77337bbb
-- 069:60f000006f4f600063333600777777703377777073337777b7733777bbb73377
-- 070:0000000000000000000000000000000000000000700000007000000070000000
-- 071:0000000000000000000000000000000000000000000000070000000000000007
-- 072:000604060006fff6006333360777777777777733777733377773377b77337bbb
-- 073:604000006fff600063333600777777703377777073337777b7733777bbb73377
-- 074:0000000000000000000000000000000000000000700000007000000070000000
-- 080:0066666600666636000633330066333300663333006633330066666600660666
-- 081:6666660066666600333366003333660033333600633366006666600066666600
-- 083:0000003700033337033333370666666736333367363333673666666703666637
-- 084:7737eeee7737bbbb7737bbbb7737eeee7737bbbb77377eee77337bbb7733777b
-- 085:eeee7377bbbb7377bbbb7377eeee7377bbbb7377eee77377bbb73377b7773377
-- 086:7330000073303000733333307666666376333363763333637666666373666630
-- 087:0000003700033337033333370666666736333367363333673666666703666637
-- 088:7737eeee7737bbbb7737bbbb7737eeee7737bbbb77377eee77337bbb7733777b
-- 089:eeee7377bbbb7377bbbb7377eeee7377bbbb7377eee77377bbb73377b7773377
-- 090:7330000073303000733333307666666376333363763333637666666373666630
-- 096:0000000000000000000006000000066000006600000066000000666000006666
-- 097:0007000000770000006600000060000000600000006600000660000066660000
-- 099:0363363700633637007337370000333700000337000000070000000700000000
-- 100:7733377777333337773333337736666677366666773663337736633377366666
-- 101:7773337773333377333333776666637766666377333663773336637766666377
-- 102:7363363073633600737337007333300073000000700000007000000070000000
-- 103:0363363700633637007337370000333700000337000000070000000700000000
-- 104:7733377777333337773333337736666677366666773663337736633377366666
-- 105:7773337773333377333333776666637766666377333663773336637766666377
-- 106:7363363073633600737337007333300073000000700000007000000070000000
-- 112:0066666600666636000033330006333300666333006633330066666600660600
-- 113:6636600063366600333366003333660033333600633366000066600006666600
-- 115:0000000700000007000000000000000000000000000000000000000000000000
-- 116:7736666677733663077736630777766700077667000776670000066000000060
-- 117:6666637736633777366377707667777076677000766770000660000006600000
-- 118:7000000000000000000000000000000000000000000000000000000000000000
-- 119:0000000700000007000000000000000000000000000000000000000000000000
-- 120:7736666677733663077736630777766700077667000776670000066000000060
-- 121:6666637736633777366377707667777076677000766770000660000006600000
-- 122:7000000000000000000000000000000000000000000000000000000000000000
-- 128:000000000f00000000f00000000f00000000f00000000f00000000ff000000ff
-- 129:00000000000000f000000f000000f000000f000000f00000ff000000ff000000
-- 131:0000000000000000000000000000000000000000000000070000000000000007
-- 132:00060f060006f4f6006333360777777777777733777733377773377b77337bbb
-- 133:60f000006f4f600063333600777777703377777073337777b7733777b1273377
-- 134:0000000000000000000000000000000000000000700000007000000070000000
-- 135:0000000000000000000000000000000000000000000000070000000000000007
-- 136:000604060006fff6006333360777777777777733777733377773377b77337bbb
-- 137:604000006fff600063333600777777703377777073337777b7733777b1273377
-- 138:0000000000000000000000000000000000000000700000007000000070000000
-- 144:000000ff000000ff00000f000000f000000f000000f000000f00000000000000
-- 145:ff000000ff00000000f00000000f00000000f00000000f00000000f000000000
-- 147:0000003700033337033333370666366736333367363333673666666703666637
-- 148:7737eeee7737bbbb7737bbb17737ee127737bbb177377eee77337bbb7733777b
-- 149:ee127377bbb17377bbbb73771eee7377bbbb7377eee77377bbb73377b7773377
-- 150:7330000073303000733333307666666376333363763333607666666373666630
-- 151:0000003700033337033333370666366736333367363333673666666703666637
-- 152:7737eeee7737bbbb7737bbb17737ee127737bbb177377eee77337bbb7733777b
-- 153:ee127377bbb17377bbbb73771eee7377bbbb7377eee77377bbb73377b7773377
-- 154:7330000073303000733333307666666376333363763333607666666373666630
-- 163:0363363700633637007337370000333700000337000000070000000700000000
-- 164:7733377777333337773333337736663677366666773663337736633377366666
-- 165:7773337773333377333333776666637766666377333663773336637066666370
-- 166:7363363073633300737333007333300073000000700000007000000000000000
-- 167:0363363700633637007337370000333700000337000000070000000700000000
-- 168:7733377777333337773333337736663677366666773663337736633377366666
-- 169:7773337773333377333333776666637766666377333663773336637066666370
-- 170:7363363073633300737333007333300073000000700000007000000000000000
-- 179:0000000700000007000000000000000000000000000000000000000000000000
-- 180:7736666677733663077736630777766700077667000776670000066000000060
-- 181:6666337736633777366377707667777076677000767770000660000006600000
-- 182:7000000000000000000000000000000000000000000000000000000000000000
-- 183:0000000700000007000000000000000000000000000000000000000000000000
-- 184:7736666677733663077736630777766700077667000776670000066000000060
-- 185:6666337736633777366377707667777076677000767770000660000006600000
-- 186:7000000000000000000000000000000000000000000000000000000000000000
-- 195:0000000000000000000000000000000000000000000000070000000000000007
-- 196:00060f000006f4f6006333360777777777777733777733377773377b7733721b
-- 197:60f000006f4f600063333600777777003377777073337777b7733777b1273377
-- 198:0000000000000000000000000000000000000000700000000000000070000000
-- 199:0000000000000000000000000000000000000000000000070000000000000007
-- 200:000604000006fff6006333360777777777777733777733377773377b7733721b
-- 201:604000006fff600063333600777777003377777073337777b7733777b1273377
-- 202:0000000000000000000000000000000000000000700000000000000070000000
-- 211:0000003700033337033333330666366736333367363333673666666703666637
-- 212:773731ee773721bb77371bb17737ee137737bbb177377eee77337bbb7733777b
-- 213:ee137377bbb17377bbbb73771ee17377bb127377e13773771227337717773377
-- 214:7330000073303000733333307666666337333363763333607663666073666630
-- 215:0000003700033337033333330666366736333367363333673666666703666637
-- 216:773731ee773721bb77371bb17737ee137737bbb177377eee77337bbb7733777b
-- 217:ee137377bbb17377bbbb73771ee17377bb127377e13773771227337717773377
-- 218:7330000073303000733333307666666337333363763333607663666073666630
-- 227:0363363700633637007337370000333700000333000000070000000700000000
-- 228:7733377777333337773333337336663677366666773663337736633377366666
-- 229:7773337773333377333333776666637766666377333663773336637066666370
-- 230:7363363073633300737333007333300073000000700000007000000000000000
-- 231:0363363700633637007337370000333700000333000000070000000700000000
-- 232:7733377777333337773333337336663677366666773663337736633377366666
-- 233:7773337773333377333333776666637766666377333663773336637066666370
-- 234:7363363073633300737333007333300073000000700000007000000000000000
-- 243:0000000000000007000000000000000000000000000000000000000000000000
-- 244:7736666677733663077736630077766700077667000776670000066000000060
-- 245:6666337736633777366377707667777076677000767770000660000006600000
-- 246:7000000000000000000000000000000000000000000000000000000000000000
-- 247:0000000000000007000000000000000000000000000000000000000000000000
-- 248:7736666677733663077736630077766700077667000776670000066000000060
-- 249:6666337736633777366377707667777076677000767770000660000006600000
-- 250:7000000000000000000000000000000000000000000000000000000000000000
-- </SPRITES>

-- <MAP>
-- 000:000000000000000606060600000000000000000000000000000000000000000000000000000606060600000000000000000000000000000000000000000000000000000606060600000000000000000000000000000000000000000000000000000606060600000000000000000000000000000000000000000000000000000606060600000000000000000000000000000000000000000000000000000606060600000000000000000000000000000000000000000000000000000606060600000000000000000000000000000000000000000000000000000606060600000000000000000000000000000000000000
-- 001:060000000000000606060000000000000005000000000000000000050000060000000000000606060000000000000005000000000000000000050000060000000000000606060000000000000005000000000000000000050000060000000000000606060000000000000005000000000000000000050000060000000000000606060000000000000005000000000000000000050000060000000000000606060000000000000005000000000000000000050000060000000000000606060000000000000005000000000000000000050000060000000000000606060000000000000005000000000000000000050000
-- 002:060600050000000006060500000000000000000000000000000000000000060600050000000006060500000000000000000000000000000000000000060600050000000006060500000000000000000000000000000000000000060600050000000006060500000000000000000000000000000000000000060600050000000006060500000000000000000000000000000000000000060600050000000006060500000000000000000000000000000000000000060600050000000006060500000000000000000000000000000000000000060600050000000006060500000000000000000000000000000000000000
-- 003:060606060000000006000000000000060000000000000000000000000000060606060000000006000000000000060000000000000000000000000000060606060000000006000000000000060000000000000000000000000000060606060000000006000000000000060000000000000000000000000000060606060000000006000000000000060000000000000000000000000000060606060000000006000000000000060000000000000000000000000000060606060000000006000000000000060000000000000000000000000000060606060000000006000000000000060000000000000000000000000000
-- 004:060606000000000000000000000000000000000000060000000500000000060606000000000000000000000000000000000000060000000500000000060606000000000000000000000000000000000000060000000500000000060606000000000000000000000000000000000000060000000500000000060606000000000000000000000000000000000000060000000500000000060606000000000000000000000000000000000000060000000500000000060606000000000000000000000000000000000000060000000500000000060606000000000000000000000000000000000000060000000500000000
-- 005:0606060000000600000b07080808090a00000000000000000000000000000606060000000600000b07080808090a00000000000000000000000000000606060000000600000b07080808090a00000000000000000000000000000606060000000600000b07080808090a00000000000000000000000000000606060000000600000b07080808090a00000000000000000000000000000606060000000600000b07080808090a00000000000000000000000000000606060000000600000b07080808090a00000000000000000000000000000606060000000600000b07080808090a0000000000000000000000000000
-- 006:060600000000000000000000000005000000000000000000000000000000060600000000000000000000000005000000000000000000000000000000060600000000000000000000000005000000000000000000000000000000060600000000000000000000000005000000000000000000000000000000060600000000000000000000000005000000000000000000000000000000060600000000000000000000000005000000000000000000000000000000060600000000000000000000000005000000000000000000000000000000060600000000000000000000000005000000000000000000000000000000
-- 007:060000000500000000000000000000000000000000000000000000000000060000000500000000000000000000000000000000000000000000000000060000000500000000000000000000000000000000000000000000000000060000000500000000000000000000000000000000000000000000000000060000000500000000000000000000000000000000000000000000000000060000000500000000000000000000000000000000000000000000000000060000000500000000000000000000000000000000000000000000000000060000000500000000000000000000000000000000000000000000000000
-- 008:000000000006060600050000000000000000000000000000000000000600000000000006060600050000000000000000000000000000000000000600000000000006060600050000000000000000000000000000000000000600000000000006060600050000000000000000000000000000000000000600000000000006060600050000000000000000000000000000000000000600000000000006060600050000000000000000000000000000000000000600000000000006060600050000000000000000000000000000000000000600000000000006060600050000000000000000000000000000000000000600
-- 009:00000000060606060000000000000000000b0708090a000000000000000000000000060606060000000000000000000b0708090a000000000000000000000000060606060000000000000000000b0708090a000000000000000000000000060606060000000000000000000b0708090a000000000000000000000000060606060000000000000000000b0708090a000000000000000000000000060606060000000000000000000b0708090a000000000000000000000000060606060000000000000000000b0708090a000000000000000000000000060606060000000000000000000b0708090a0000000000000000
-- 010:000000060606060000000000060000000005000000000500000000000000000000060606060000000000060000000005000000000500000000000000000000060606060000000000060000000005000000000500000000000000000000060606060000000000060000000005000000000500000000000000000000060606060000000000060000000005000000000500000000000000000000060606060000000000060000000005000000000500000000000000000000060606060000000000060000000005000000000500000000000000000000060606060000000000060000000005000000000500000000000000
-- 011:000600000606060000000000000000000000000000000000000000000000000600000606060000000000000000000000000000000000000000000000000600000606060000000000000000000000000000000000000000000000000600000606060000000000000000000000000000000000000000000000000600000606060000000000000000000000000000000000000000000000000600000606060000000000000000000000000000000000000000000000000600000606060000000000000000000000000000000000000000000000000600000606060000000000000000000000000000000000000000000000
-- 012:000000000006000500000000000000000000000000000606060000000500000000000006000500000000000000000000000000000606060000000500000000000006000500000000000000000000000000000606060000000500000000000006000500000000000000000000000000000606060000000500000000000006000500000000000000000000000000000606060000000500000000000006000500000000000000000000000000000606060000000500000000000006000500000000000000000000000000000606060000000500000000000006000500000000000000000000000000000606060000000500
-- 013:00000000000000000b0a000000050000000000000606060606000000000000000000000000000b0a000000050000000000000606060606000000000000000000000000000b0a000000050000000000000606060606000000000000000000000000000b0a000000050000000000000606060606000000000000000000000000000b0a000000050000000000000606060606000000000000000000000000000b0a000000050000000000000606060606000000000000000000000000000b0a000000050000000000000606060606000000000000000000000000000b0a0000000500000000000006060606060000000000
-- 014:000000000000000000000000000000000000000606060606060600000000000000000000000000000000000000000000000606060606060600000000000000000000000000000000000000000000000606060606060600000000000000000000000000000000000000000000000606060606060600000000000000000000000000000000000000000000000606060606060600000000000000000000000000000000000000000000000606060606060600000000000000000000000000000000000000000000000606060606060600000000000000000000000000000000000000000000000606060606060600000000
-- 015:0101020101020101020101020101020101020101020101020101020101020c0c1c0c0c1c0c0c1c0c0c1c0c0c1c0c0c1c0c0c1c0c0c1c0c0c1c0c0c1c0d0d1d0d0d1d0d0d1d0d0d1d0d0d1d0d0d1d0d0d1d0d0d1d0d0d1d0d0d1d0e0e1e0e0e1e0e0e1e0e0e1e0e0e1e0e0e1e0e0e1e0e0e1e0e0e1e0e0e1e2c2c3c2c2c3c2c2c3c2c2c3c2c2c3c2c2c3c2c2c3c2c2c3c2c2c3c2c2c3c2d2d3d2d2d3d2d2d3d2d2d3d2d2d3d2d2d3d2d2d3d2d2d3d2d2d3d2d2d3d2e2e3e2e2e3e2e2e3e2e2e3e2e2e3e2e2e3e2e2e3e2e2e3e2e2e3e2e2e3e2e2e2e2e8c8c9e009c00000000009c0000009c000000008c8c2e2e2e2e2e
-- 016:0303040303040303040303040303040303040303040303040303040303044c4c5c4c4c5c4c4c5c4c4c5c4c4c5c4c4c5c4c4c5c4c4c5c4c4c5c4c4c5c4d4d5d4d4d5d4d4d5d4d4d5d4d4d5d4d4d5d4d4d5d4d4d5d4d4d5d4d4d5d4e4e5e4e4e5e4e4e5e4e4e5e4e4e5e4e4e5e4e4e5e4e4e5e4e4e5e4e4e5e6c6c7c6c6c7c6c6c7c6c6c7c6c6c7c6c6c7c6c6c7c6c6c7c6c6c7c6c6c7c6d6d7d6d6d7d6d6d7d6d6d7d6d6d7d6d6d7d6d6d7d6d6d7d6d6d7d6d6d7d6e6e7e6e6e7e6e6e7e6e6e7e6e6e7e6e6e7e6e6e7e6e6e7e6e6e7e6e6e7e6e6e6e6e8d8d0000009d00000000009d0000009d00008e8d8d6e6e6e6e6e
-- </MAP>

-- <WAVES>
-- 000:012345543210cdeffedc012345543210
-- 001:0123456789abcdeffedcba9876543210
-- 002:0123456789abcdef0123456789abcdef
-- </WAVES>

-- <SFX>
-- 000:000600030002000f000af009f009f009f008f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000c00000000000
-- 001:1307130523032301330f330d430b43095308530063006300730073008300830093009300a300a300b300b300c300c300d300d300e300e300f300f300c00000000009
-- 002:03000300f30003000300f30003000300f30003000300f30003000300f30003000300f30003000300f30003000300f30003000300f30003000300f300407000000000
-- 003:00f800f7f0e8f0e7f0d820d720c0f0c0f0b0f0b040a040a0f090f09060806080f070f07080608060f050f050a040a040f030f030c020c020f010f010b77000000006
-- </SFX>

-- <PALETTE>
-- 000:000000bcb19f847f7f5a5a63cead73a5845a3e3d4c21263f6b7b393a533984ad424063b26c4f40673347394071c0461f
-- </PALETTE>

